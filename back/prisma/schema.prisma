generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tool {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  icon        String?
  link        String?
  order       Int?
  categoryId  Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  bookmark    Bookmark[]
  Category    Category?  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@index([name])
  @@index([description])
  @@index([icon])
  @@index([link])
  @@index([order])
}

model User {
  id             Int        @id @default(autoincrement())
  type           String     @default("server")
  email          String
  password       String?
  firstname      String?
  lastname       String?
  username       String
  githubUsername String?
  active         Boolean    @default(false)
  website        String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  Avatar         Avatar?
  bookmark       Bookmark[]

  @@index([type])
  @@index([email])
  @@index([password])
  @@index([firstname])
  @@index([lastname])
  @@index([username])
  @@index([githubUsername])
  @@index([active])
  @@index([website])
}

model Bookmark {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  link        String?
  userId      Int?
  toolId      Int?
  imgLink     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  tool        Tool?    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([name])
  @@index([description])
  @@index([link])
  @@index([imgLink])
}

model ToolsOnUsers {
  userId    Int
  toolId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@id([userId, toolId])
}

model Token {
  id              Int     @id @default(autoincrement())
  jwtRefreshToken String?
  emailToken      String?
  expiration      String?
  userId          Int

  @@index([jwtRefreshToken])
  @@index([expiration])
  @@index([emailToken])
}

model Avatar {
  id        Int      @id @default(autoincrement())
  type      String   @default("server")
  fileName  String?  @unique
  filePath  String?  @unique
  url       String
  size      BigInt?
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([type])
  @@index([fileName])
  @@index([filePath])
  @@index([size])
  @@index([userId])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  order       Int?     @default(999)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  Tool        Tool[]

  @@index([name])
  @@index([description])
  @@index([order])
}
